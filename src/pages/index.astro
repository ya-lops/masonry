---
import BaseLayout from "@/layouts/BaseLayout.astro";

const getImages = import.meta.glob("@/images/*", { eager: true });
const images = Object.values(
  getImages as { [key: string]: { default: any } },
).map((image) => image.default);

// for now its hardcoded for 3 cols

const chunk2 = images.filter((_, index) => (index - 1) % 3 === 0);
const chunk3 = images.filter((_, index) => (index - 2) % 3 === 0);
const chunk1 = images.filter((_, index) => index % 3 === 0);
const allChunks = [chunk1, chunk2, chunk3];
---

<BaseLayout title="Masonry">
  <div class="container">
    <section class="masonry">
      {
        allChunks.map(chunk => (
          <div class="masonry__column">
            {
              chunk.map((image, index) => {
                return (
                  <div class:list={['masonry__item', image.width/image.height < .75 ? 'is-portrait' : '' ]} style={`--index: ${index}`}>
                    <img src={image.src}  />
                  </div>
                );
              })
            }
          </div>
        ))
      }
    </section>
  </div>
</BaseLayout>

<style lang="scss">
  .masonry {
    display: grid;
    gap: 0.5rem;
    margin-block: 1rem;

    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));

    @media (width < 500px) {
      grid-auto-rows: 75px;
    }

    @media (width > 500px) {
      grid-template-columns: repeat(3, 1fr);
    }

    &__column {
      display: grid;
      grid-template-columns: 100%;
      gap: 0.5rem;
      align-items: stretch;
      align-content: stretch;

      @media (width < 500px) {
        display: contents;
      }
    }

    &__item {
      @media (width < 500px) {
        max-height: 400px;
        order: var(--index);
        grid-row: span 2;
        
        &.is-portrait {
          grid-row: span 3;
        }
      }

      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 5px;
      }
    }
  }
</style>
